package vista;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import clases.Propietario;
import modelo.Dao;
import modelo.DaoImplementacionBD;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import javax.swing.JTextField;
import java.awt.Color;

public class VentanaPropietario extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JTextField textID, textNombre, textFechaNacimiento;
	private JButton btnVolver, btnAlta;

	public VentanaPropietario(VentanaPrincipal principal, boolean modal) {
		super(principal);
		this.setModal(modal);
		setBounds(100, 100, 564, 262);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBackground(Color.GRAY);
		contentPanel.setForeground(new Color(0, 0, 0));
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		{
			btnAlta = new JButton("Alta");
			btnAlta.setForeground(new Color(250, 250, 210));
			btnAlta.setBackground(new Color(165, 42, 42));
			btnAlta.setFont(new Font("Tahoma", Font.BOLD, 13));
			btnAlta.setBounds(416, 45, 91, 43);
			contentPanel.add(btnAlta);
			btnAlta.setActionCommand("OK");
			btnAlta.addActionListener(this);
			getRootPane().setDefaultButton(btnAlta);
		}

		JLabel lblID = new JLabel("Id");
		lblID.setForeground(new Color(250, 250, 210));
		lblID.setFont(new Font("Tahoma", Font.BOLD, 14));
		lblID.setBounds(25, 50, 58, 29);
		contentPanel.add(lblID);

		JLabel lblNombre = new JLabel("Nombre");
		lblNombre.setForeground(new Color(250, 250, 210));
		lblNombre.setFont(new Font("Tahoma", Font.BOLD, 14));
		lblNombre.setBounds(25, 103, 58, 29);
		contentPanel.add(lblNombre);

		JLabel lblFechaDeNacimiento = new JLabel("Fecha de nacimiento");
		lblFechaDeNacimiento.setForeground(new Color(250, 250, 210));
		lblFechaDeNacimiento.setFont(new Font("Tahoma", Font.BOLD, 14));
		lblFechaDeNacimiento.setBounds(25, 157, 155, 29);
		contentPanel.add(lblFechaDeNacimiento);

		textID = new JTextField();
		textID.setBounds(176, 56, 172, 20);
		contentPanel.add(textID);
		textID.setColumns(10);

		textNombre = new JTextField();
		textNombre.setColumns(10);
		textNombre.setBounds(176, 109, 172, 20);
		contentPanel.add(textNombre);

		textFechaNacimiento = new JTextField();
		textFechaNacimiento.setColumns(10);
		textFechaNacimiento.setBounds(176, 163, 172, 20);
		contentPanel.add(textFechaNacimiento);

		btnVolver = new JButton("Volver");
		btnVolver.setForeground(new Color(250, 250, 210));
		btnVolver.setBackground(new Color(153, 153, 255));
		btnVolver.setFont(new Font("Tahoma", Font.BOLD, 13));
		btnVolver.setActionCommand("OK");
		btnVolver.setBounds(416, 151, 91, 43);
		btnVolver.addActionListener(this);
		contentPanel.add(btnVolver);
	}

	private void cerrar() {
		this.dispose();

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource().equals(btnAlta)) {
			darAlta();
		} else if (e.getSource().equals(btnVolver)) {
			cerrar();
			volver();
		}

	}

	private void volver() {
		VentanaPrincipal prin = new VentanaPrincipal(null);
		prin.setVisible(true);

	}

	private void darAlta() {
		DateTimeFormatter formateador = DateTimeFormatter.ofPattern("dd-MM-yyyy");
		Dao dao = new DaoImplementacionBD();

		if (textID.getText().equals("") || textNombre.getText().equals("")
				|| textFechaNacimiento.getText().equals("")) {
			JOptionPane.showMessageDialog(btnAlta, "Debes rellenar todos los campos!");
		} else {
			Propietario prop = new Propietario();
			if (textID.getText().length() == 3) {
				prop.setId(textID.getText());
			} else {
				JOptionPane.showMessageDialog(btnAlta, "La ID debe de contener 3 caracteres!");
			}
			prop.setNombre(textNombre.getText());
			try {
				prop.setFechaNacimiento(LocalDate.parse(textFechaNacimiento.getText(), formateador));
			} catch (Exception e) {
				
			}	
			dao.altaProp(prop);

		}
	}

	public void cargarProps(VentanaPrincipal princ, Dao dao, String id) {
		dao = new DaoImplementacionBD();
		ArrayList<Propietario> idProp = dao.getPropietario();
		for (int i = 0; i < idProp.size(); i++) {
			if (idProp.get(i).getId().equalsIgnoreCase(id)) {
				textID.setEditable(false);
				btnAlta.setEnabled(false);
				textID.setText(idProp.get(i).getId());
				textNombre.setText(idProp.get(i).getNombre());
				textFechaNacimiento.setText(idProp.get(i).getFechaNacimiento().toString());
				
			}
		}
	}
}