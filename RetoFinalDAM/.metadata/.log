!SESSION 2023-05-09 09:23:58.031 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file E:\PGR\RetoFinalDAM\.metadata\.bak_0.log
Created Time: 2023-05-09 12:09:43.231

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:09:43.231
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:09:43.232
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:09:55.865
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		ConsltaActor vent = new ConsltaActor();
		vent.setVisible(true);
		}
		});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:09:55.866
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:09:55.866
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:09:57.115
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		ConsltaActor vent = new Cons();
		vent.setVisible(true);
		}
		});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:09:57.116
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:09:57.116
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:09:58.620
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		ConsltaActor vent = new();
		vent.setVisible(true);
		}
		});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:09:58.621
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:09:58.622
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:09:59.757
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		 vent = new VPonerResultado();
		vent.setVisible(true);
		}
		});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:09:59.757
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:09:59.758
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:10:01.472
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado();
		vent.setVisible(true);
		}
		});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:10:01.473
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:10:01.473
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:10:02.396
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado();
		vent.setVisible(true);
		}
	});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:10:02.396
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:10:02.397
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:10:07.088
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado();
		vent.setVisible(true);
		}
		});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:10:07.090
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:10:07.090
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:10:35.780
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
	});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:10:35.781
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:10:35.782
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:10:37.169
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:10:37.170
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:10:37.170
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:10:53.324
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:10:53.325
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:10:53.326
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:16.884
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		Al vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:16.885
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:16.885
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:18.047
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		Alt vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:18.048
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:18.049
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:22.112
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:22.113
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:22.113
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:26.336
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = newA(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:26.336
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:26.337
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:26.955
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = newAl(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:26.956
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:26.957
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:28.380
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new (vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:28.381
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:28.381
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:29.087
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new Al(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:29.088
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:29.088
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:32.380
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new AltaActor(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:32.381
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:32.381
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:38.024
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new AltaActor();
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:38.025
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:38.026
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:48.767
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new AltaActor();
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:48.769
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:48.769
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:11:59.051
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new AltaActor();
		vent.setVisible(true);
		}
		};
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:11:59.052
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:11:59.052
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:12:00.495
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new AltaActor();
		vent.setVisible(true);
		}
		}
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:12:00.496
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:12:00.497
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:12:02.988
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new AltaActor();
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:12:02.989
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:12:02.989
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:13:50.128
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new AltaActor(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:13:50.129
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:13:50.129
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:13:50.708
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = new Al(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:13:50.709
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:13:50.710
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:13:51.873
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		AltaActor vent = newA(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:13:51.874
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:13:51.874
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:13:53.022
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		Alt vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:13:53.023
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:13:53.023
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:13:54.613
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:13:54.614
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:13:54.615
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:13:57.239
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
	});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:13:57.240
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:13:57.240
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:13:58.977
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		}

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:13:58.977
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:13:58.978
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-09 12:16:56.528
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import clases.Actor;
import clases.Anime;
import clases.Autor;
import clases.ContenidoMultimedia;
import clases.Estudio;
import modelo.Dao;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;

public class AltaAnime extends JDialog implements ActionListener{

	private final JPanel contentPanel = new JPanel();
	private JTextField textCodigo;
	private JTextField textTitulo;
	private JTextField textAÃ±o;
	private JTextField textPuntuacion;
	private JTextField textCapitulos;
	private JTextField textTemporadas;
	private JComboBox comboEstudio;
	private JButton btnVolver;
	private JButton btnBaja;
	private JButton btnModi;
	private JButton btnAlta;
	private JComboBox comboAutor;
	private JComboBox comboEstado;
	private Dao dao;
	private Anime anim;
	private JTextField textTipo;
	private JTable tabla;
	private List<Actor> act;

	/**
	 * Launch the application.
	 */
	

	/**
	 * Create the dialog.
	 */
	public AltaAnime(boolean modal, Dao dao, Anime ani) {
		this.setModal(modal);
		anim = ani;
		this.dao = dao;
		this.act=dao.getActor();
		getContentPane().setLayout(null);
		getContentPane().setLayout(null);
		contentPanel.setBounds(0, 656, 502, -656);
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel);
		
		JLabel lblAnime = new JLabel("ANIME");
		lblAnime.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		lblAnime.setBounds(10, 11, 86, 23);
		getContentPane().add(lblAnime);
		setBounds(100, 100, 518, 692);
		contentPanel.setLayout(null);
		
		JLabel lblAnime_1 = new JLabel("Codigo");
		lblAnime_1.setBounds(10, 67, 86, 23);
		lblAnime_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1);
		
		JLabel lblAnime_2 = new JLabel("Titulo");
		lblAnime_2.setBounds(10, 115, 86, 23);
		lblAnime_2.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_2);
		
		JLabel lblAnime_3 = new JLabel("Autor");
		lblAnime_3.setBounds(10, 198, 86, 23);
		lblAnime_3.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_3);
		
		JLabel lblAnime_4 = new JLabel("A\u00F1o Inicio");
		lblAnime_4.setBounds(10, 247, 86, 23);
		lblAnime_4.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4);
		
		JLabel lblAnime_4_1 = new JLabel("Estado");
		lblAnime_4_1.setBounds(10, 285, 86, 23);
		lblAnime_4_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_4_1);
		
		JLabel lblPuntuacion = new JLabel("Puntuacion");
		lblPuntuacion.setBounds(10, 319, 86, 23);
		lblPuntuacion.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblPuntuacion);
		
		JLabel lblCapitulos = new JLabel("Capitulos");
		lblCapitulos.setBounds(10, 353, 86, 23);
		lblCapitulos.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblCapitulos);
		
		JLabel lblTemporadas = new JLabel("Temporadas");
		lblTemporadas.setBounds(12, 387, 101, 23);
		lblTemporadas.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblTemporadas);
		
		JLabel lblEstudio = new JLabel("Estudio");
		lblEstudio.setBounds(10, 443, 86, 23);
		lblEstudio.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblEstudio);
		
		JLabel lblActores = new JLabel("Actores");
		lblActores.setBounds(10, 489, 86, 23);
		lblActores.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblActores);
		
		textCodigo = new JTextField();
		textCodigo.setBounds(123, 71, 279, 20);
		getContentPane().add(textCodigo);
		textCodigo.setColumns(10);
		
		textTitulo = new JTextField();
		textTitulo.setBounds(123, 119, 279, 20);
		textTitulo.setColumns(10);
		getContentPane().add(textTitulo);
		
		textAÃ±o = new JTextField();
		textAÃ±o.setBounds(123, 251, 279, 20);
		textAÃ±o.setColumns(10);
		getContentPane().add(textAÃ±o);
		
		textPuntuacion = new JTextField();
		textPuntuacion.setBounds(123, 329, 279, 20);
		textPuntuacion.setColumns(10);
		getContentPane().add(textPuntuacion);
		
		textCapitulos = new JTextField();
		textCapitulos.setBounds(123, 360, 279, 20);
		textCapitulos.setColumns(10);
		getContentPane().add(textCapitulos);
		
		textTemporadas = new JTextField();
		textTemporadas.setBounds(123, 391, 279, 20);
		textTemporadas.setColumns(10);
		getContentPane().add(textTemporadas);
		
		comboEstado = new JComboBox();
		comboEstado.setBounds(123, 296, 279, 22);
		comboEstado.setModel(new DefaultComboBoxModel(new String[] {"Proximamente", "En emision", "Finalizado"}));
		comboEstado.setSelectedIndex(-1);
		getContentPane().add(comboEstado);
		
		comboAutor = new JComboBox();
		comboAutor.setBounds(123, 201, 279, 22);
		getContentPane().add(comboAutor);
		
		btnAlta = new JButton("Alta");
		btnAlta.setBounds(412, 462, 80, 20);
		btnAlta.addActionListener(this);
		btnAlta.addActionListener(this);
		getContentPane().add(btnAlta);
		
		btnModi = new JButton("Modi");
		btnModi.setBounds(412, 489, 80, 20);
		btnModi.addActionListener(this);
		btnModi.addActionListener(this);
		getContentPane().add(btnModi);
		
		btnBaja = new JButton("Baja");
		btnBaja.setBounds(412, 520, 80, 20);
		btnBaja.addActionListener(this);
		btnBaja.addActionListener(this);
		getContentPane().add(btnBaja);
		
		btnVolver = new JButton("Volver");
		btnVolver.setBounds(412, 551, 80, 20);
		btnVolver.addActionListener(this);
		btnVolver.addActionListener(this);
		getContentPane().add(btnVolver);
		
		comboEstudio = new JComboBox();
		comboEstudio.setBounds(123, 446, 279, 22);
		getContentPane().add(comboEstudio);
		
		JLabel lblAnime_1_1 = new JLabel("Tipo");
		lblAnime_1_1.setBounds(10, 164, 86, 23);
		lblAnime_1_1.setFont(new Font("Comic Sans MS", Font.PLAIN, 16));
		getContentPane().add(lblAnime_1_1);
		
		textTipo = new JTextField();
		textTipo.setBounds(123, 168, 279, 20);
		textTipo.setColumns(10);
		getContentPane().add(textTipo);
		
		if (ani == null) {
			btnBaja.setEnabled(false);
			btnModi.setEnabled(false);
		} else {
			btnAlta.setEnabled(false);
			textCodigo.enable(false);
			CargarAnime(ani);
		}
		
		cargarComboAutor(dao);
		cargarComboEstudio(dao);
	presentarTabla();
	
	}

	public void presentarTabla() {
		JScrollPane scroll = new JScrollPane();
		scroll.setBorder(null);
		scroll.getViewport().setBackground(Color.WHITE);
		scroll.setEnabled(false);
		scroll.setBorder(BorderFactory.createEmptyBorder());
		tabla = this.cargarTabla(act);
		
		@Override
		public void mouseClicked(MouseEvent e) {
		int fila=tabla.getSelectedRow();
		VPonerResultado vent = new VPonerResultado(vElegir, true, dao, apuestas.get(fila));
		vent.setVisible(true);
		}
		});
		 
		tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tabla.setBorder(null);
		tabla.setBackground(Color.WHITE);
		tabla.setForeground(Color.BLACK);
		tabla.setFont(new Font("Arial", Font.PLAIN, 14));
		tabla.setRowHeight(40);
		tabla.setEnabled(false);
		scroll.setViewportView(tabla);
		scroll.setBounds(31, 524, 374, 118);
		getContentPane().add(scroll);

		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setFont(new Font("Arial", Font.BOLD, 16));
		lblNewLabel_1.setBounds(0, 0, 502, 653);
		getContentPane().add(lblNewLabel_1);
		

		public JTable cargarTabla(List<Actor> act) {
			String[] cabeceras = {"DNI", "NOMBRE", "FECHA NAC","CIUDAD NAC"};
			String[] fila = new String[10];
	
			DefaultTableModel model = new DefaultTableModel(null, cabeceras);
	
			for (Actor a : act) {
			fila[0] = a.getDni() + "";
			fila[1] = a.getNombre() + "";
			fila[2] = a.getFechaNac() + "";
			fila[3] = a.getCiudadNac() + "";
		
	
			model.addRow(fila);
			}
	
			return new JTable(model);
		}


	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource().equals(btnAlta)) {
			altaAnime();
		}
		if (e.getSource().equals(btnModi)) {
			modificado(anim);
		}
		if (e.getSource().equals(btnBaja)) {
			borrado(anim);
		}
		if (e.getSource().equals(btnVolver)) {
			volver();
		}
		
	}
	
	private void modificado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ((ContenidoMultimedia) ani).getCodigo();
				if (validar()) {
					Anime anim = new Anime();
					anim.setCodigo(textCodigo.getText());
					anim.setTitulo(textTitulo.getText());
					anim.setTipoAnime(textTipo.getText());
					anim.setAutor((String) comboAutor.getSelectedItem());
					anim.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					anim.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					anim.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					anim.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					anim.setEstudio((String) comboEstudio.getSelectedItem());
					
					

					dao.modificarAnime(anim, codigo);
					limpiar();

				}

			}

			private void borrado(Anime ani) {
		// TODO Auto-generated method stub
				String codigo = ani.getCodigo();

				dao.borradoAnime(codigo);
				limpiar();
				JOptionPane.showMessageDialog(null, "Anime borrado correctamente", "Borrado",
						JOptionPane.INFORMATION_MESSAGE);
				volver();
			}

			public boolean validar() {
				boolean bien = false;
				if (textCodigo.getText().equalsIgnoreCase(null) && textAÃ±o.getText().equalsIgnoreCase(null)
						&& textCapitulos.getText().equalsIgnoreCase(null) && textPuntuacion.getText().equalsIgnoreCase(null) && textTemporadas.getText().equalsIgnoreCase(null) && textTitulo.getText().equalsIgnoreCase(null)) {

				} else {
					bien = true;
				}
				return bien;

			}

			private void altaAnime() {
				int donde;
				String dni = (String) comboAutor.getSelectedItem();
				donde = dni.indexOf(" ");
				String anime = dni.substring(0, donde);
				
				String cadena = (String) comboEstudio.getSelectedItem();
				
				
				
				if (validar()) {

					Anime ani = new Anime();
		
					ani.setCodigo(textCodigo.getText());
					ani.setTitulo(textTitulo.getText());
					ani.setTipoAnime(textTipo.getText());
					ani.setEstado((String) comboEstado.getSelectedItem());
					ani.setAutor((String) comboAutor.getSelectedItem());
					ani.setAÃ±oInicio(Integer.parseInt(textAÃ±o.getText()));
					ani.setPuntuacion(Float.parseFloat(textPuntuacion.getText()));
					ani.setCapitulos(Integer.parseInt(textCapitulos.getText()));
					ani.setTemporadas(Integer.parseInt(textTemporadas.getText()));
					ani.setEstudio((String) comboEstudio.getSelectedItem());
					
					ani.setAutor(anime);
					ani.setEstudio(cadena);
					
					dao.altaAnime(ani);
					JOptionPane.showMessageDialog(null, "Alta hecha correctamente", "Alta", JOptionPane.INFORMATION_MESSAGE);
					limpiar();
				} else {
					JOptionPane.showMessageDialog(null, "No puedes dejar parametros vacios", "Error",
							JOptionPane.ERROR_MESSAGE);
				}

			}

			private void limpiar() {
		// TODO Auto-generated method stub
				textCodigo.setText(null);
				textCapitulos.setText(null);
				comboAutor.setSelectedIndex(-1);
				comboEstado.setSelectedIndex(-1);
				comboEstudio.setSelectedIndex(-1);;
				textTipo.setText(null);
				textAÃ±o.setText(null);
				textPuntuacion.setText(null);
				textTemporadas.setText(null);
				textTitulo.setText(null);
			}

			private void volver() {
				this.dispose();
			}

			private void cargarComboAutor(Dao dao) {
				ArrayList<Autor> aut = dao.getAutor();
				for (int i = 0; i < aut.size(); i++) {
					comboAutor.addItem(aut.get(i).getDni()+" | "+aut.get(i).getNombre());
				}
				comboAutor.setSelectedIndex(-1);
				
			}
			
			
			private void cargarComboEstudio(Dao dao) {
				ArrayList<Estudio> est = dao.getEstudio();
				for (int i = 0; i < est.size(); i++) {
					comboEstudio.addItem(est.get(i).getNombre());
				}
				comboEstudio.setSelectedIndex(-1);
				
			}
			
			public void CargarAnime(Anime ani) {
				textCodigo.setText(ani.getCodigo());
				textTitulo.setText(ani.getTitulo());
				textTipo.setText(ani.getTipoAnime());
				comboAutor.setSelectedItem(ani.getAutor());
				textAÃ±o.setText(Integer.toString(ani.getAÃ±oInicio()));
				comboEstado.setSelectedItem(ani.getEstado());
				textPuntuacion.setText(Float.toString(ani.getPuntuacion()));
				textCapitulos.setText(Integer.toString(ani.getCapitulos()));
				textTemporadas.setText(Integer.toString(ani.getTemporadas()));	
				comboEstudio.setSelectedItem(ani.getEstudio());
			}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-09 12:16:56.529
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-09 12:16:56.530
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SESSION 2023-05-10 08:17:12.116 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-05-10 08:18:00.166
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-05-10 08:18:00.166
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19ce19b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@13047d3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-05-10 08:18:00.166
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b240276,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a5efbb9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-05-10 08:18:14.401
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\1dam'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-05-10 12:31:27.824 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-05-10 12:32:14.787
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-05-10 12:32:14.787
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19ce19b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@13047d3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-05-10 12:32:14.787
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b240276,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a5efbb9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-05-10 12:32:23.013
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\1dam'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-05-11 09:00:53.461 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-05-11 09:02:02.939
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-05-11 09:02:02.939
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@64d53f0d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1b10f60e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-05-11 09:02:02.940
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b916cc2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7f5e9949,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-05-11 09:02:13.847
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\1dam'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
